import numpy
import math
from OpenGL.GL import *
from PyQt5.QtWidgets import QOpenGLWidget
from PyQt5 import QtCore, QtGui, QtWidgets
from OpenGL.GLU import *
import json, sys
import platform as pf
from camera import camera
from OpenGL.arrays import vbo
class number:
    def __init__(self):
        self.num_0 = numpy.array(
            [[-182, 23], [-182, -35], [-180, 49], [-183, -3], [-182, -35], [-182, 23], [-182, -35], [-179, -66], [-180, 49],
             [-180, 49], [-179, -66], [-177, 74], [-179, -66], [-174, -95], [-177, 74], [-177, 74], [-174, -95], [-173, 98],
             [-174, -95], [-168, -122], [-173, 98], [-173, 98], [-168, -122], [-168, 120], [-168, -122], [-161, 142],
             [-168, 120], [-168, -122], [-159, -149], [-161, 142], [-161, 142], [-159, -149], [-153, 163], [-159, -149],
             [-149, -174], [-153, 163], [-153, 163], [-149, -174], [-145, 182], [-149, -174], [-137, -198], [-145, 182],
             [-145, 182], [-137, -198], [-135, 200], [-137, -198], [-125, 216], [-135, 200], [-137, -198], [-121, -223],
             [-125, 216], [-125, 216], [-121, -223], [-114, 231], [-121, -223], [-104, -244], [-114, 231], [-114, 231],
             [-104, -244], [-102, 245], [-104, -244], [-100, -14], [-102, 245], [-104, -244], [-100, -47], [-100, -14],
             [-102, 245], [-100, -14], [-100, 6], [-104, -244], [-98, -77], [-100, -47], [-102, 245], [-100, 6], [-100, 27],
             [-104, -244], [-95, -106], [-98, -77], [-102, 245], [-100, 27], [-98, 48], [-104, -244], [-91, -134], [-95, -106],
             [-102, 245], [-98, 48], [-97, 69], [-104, -244], [-86, -262], [-91, -134], [-102, 245], [-97, 69], [-95, 90],
             [-91, -134], [-86, -262], [-86, -159], [-102, 245], [-95, 90], [-93, 111], [-86, -262], [-79, -183], [-86, -159],
             [-102, 245], [-93, 111], [-90, 132], [-86, -262], [-72, -205], [-79, -183], [-102, 245], [-90, 132], [-89, 257],
             [-86, -262], [-67, -276], [-72, -205], [-90, 132], [-86, 153], [-89, 257], [-72, -205], [-67, -276], [-64, -221],
             [-89, 257], [-86, 153], [-82, 171], [-67, -276], [-56, -235], [-64, -221], [-89, 257], [-82, 171], [-77, 188],
             [-67, -276], [-47, -247], [-56, -235], [-89, 257], [-77, 188], [-75, 267], [-67, -276], [-46, -285], [-47, -247],
             [-77, 188], [-71, 204], [-75, 267], [-47, -247], [-46, -285], [-37, -255], [-75, 267], [-71, 204], [-65, 274],
             [-46, -285], [-25, -262], [-37, -255], [-71, 204], [-64, 218], [-65, 274], [-46, -285], [-25, -291], [-25, -262],
             [-65, 274], [-64, 218], [-57, 230], [-25, -262], [-25, -291], [-13, -266], [-65, 274], [-57, 230], [-54, 280],
             [-25, -291], [-2, -293], [-13, -266], [-57, 230], [-48, 241], [-54, 280], [-13, -266], [-2, -293], [0, -267],
             [-54, 280], [-48, 241], [-43, 285], [-2, -293], [5, -267], [0, -267], [-48, 241], [-42, 248], [-43, 285],
             [-2, -293], [9, -293], [5, -267], [-43, 285], [-42, 248], [-35, 253], [5, -267], [9, -293], [12, -265], [-43, 285],
             [-35, 253], [-31, 289], [9, -293], [18, -263], [12, -265], [-35, 253], [-28, 258], [-31, 289], [9, -293],
             [21, -291], [18, -263], [-31, 289], [-28, 258], [-21, 262], [18, -263], [21, -291], [25, -260], [-31, 289],
             [-21, 262], [-20, 292], [21, -291], [32, -257], [25, -260], [-21, 262], [-14, 264], [-20, 292], [21, -291],
             [33, -288], [32, -257], [-20, 292], [-14, 264], [-9, 294], [32, -257], [33, -288], [39, -252], [-14, 264],
             [-6, 266], [-9, 294], [33, -288], [45, -283], [39, -252], [-9, 294], [-6, 266], [1, 266], [39, -252], [45, -283],
             [46, -247], [-9, 294], [1, 266], [1, 294], [45, -283], [52, -241], [46, -247], [1, 266], [8, 266], [1, 294],
             [45, -283], [57, -278], [52, -241], [1, 294], [8, 266], [14, 265], [52, -241], [57, -278], [58, -233], [1, 294],
             [14, 265], [20, 293], [57, -278], [64, -224], [58, -233], [14, 265], [20, 264], [20, 293], [57, -278], [69, -215],
             [64, -224], [20, 293], [20, 264], [26, 262], [57, -278], [70, -270], [69, -215], [20, 293], [26, 262], [32, 259],
             [69, -215], [70, -270], [74, -204], [20, 293], [32, 259], [37, 256], [70, -270], [78, -192], [74, -204], [20, 293],
             [37, 256], [38, 289], [70, -270], [82, -262], [78, -192], [37, 256], [42, 253], [38, 289], [78, -192], [82, -262],
             [82, -179], [38, 289], [42, 253], [49, 247], [82, -262], [87, -157], [82, -179], [38, 289], [49, 247], [55, 282],
             [82, -262], [92, -133], [87, -157], [49, 247], [55, 239], [55, 282], [82, -262], [95, -252], [92, -133], [55, 282],
             [55, 239], [61, 230], [92, -133], [95, -252], [95, -107], [55, 282], [61, 230], [67, 221], [95, -252], [98, -78],
             [95, -107], [55, 282], [67, 221], [72, 273], [95, -252], [100, -46], [98, -78], [67, 221], [72, 210], [72, 273],
             [95, -252], [101, -12], [100, -46], [72, 273], [72, 210], [77, 198], [95, -252], [106, -241], [101, -12],
             [72, 273], [77, 198], [81, 184], [101, -12], [106, -241], [101, 23], [72, 273], [81, 184], [87, 165], [101, 23],
             [106, -241], [104, 246], [72, 273], [87, 165], [88, 260], [104, 246], [106, -241], [118, -228], [101, 50],
             [101, 23], [104, 246], [87, 165], [91, 145], [88, 260], [104, 246], [118, -228], [119, 228], [100, 75], [101, 50],
             [104, 246], [88, 260], [91, 145], [95, 123], [118, -228], [128, -214], [119, 228], [88, 260], [100, 75],
             [104, 246], [88, 260], [95, 123], [98, 100], [119, 228], [128, -214], [136, 203], [88, 260], [98, 100], [100, 75],
             [128, -214], [138, -198], [136, 203], [136, 203], [138, -198], [147, -181], [136, 203], [147, -181], [151, 176],
             [147, -181], [155, -162], [151, 176], [151, 176], [155, -162], [162, 146], [155, -162], [163, -142], [162, 146],
             [162, 146], [163, -142], [169, -120], [162, 146], [169, -120], [172, 115], [169, -120], [174, -98], [172, 115],
             [172, 115], [174, -98], [178, 80], [174, -98], [178, -74], [178, 80], [178, 80], [178, -74], [181, -49], [178, 80],
             [181, -49], [182, 43], [181, -49], [183, -22], [182, 43], [182, 43], [183, -22], [184, 4]])
        self.num_1 = numpy.array(
            [[-111, 222], [-104, 209], [-97, 213], [-111, 222], [-97, 213], [-90, 216], [-111, 222], [-90, 216], [-83, 218],
             [-111, 222], [-83, 218], [-77, 220], [-111, 222], [-77, 220], [-71, 221], [-111, 222], [-71, 221], [-66, 222],
             [-111, 222], [-66, 222], [-62, 222], [-111, 222], [-62, 222], [27, 289], [-62, 222], [-58, 222], [27, 289],
             [-58, 222], [-56, 222], [27, 289], [-56, 222], [-53, 221], [27, 289], [-53, 221], [-50, 220], [27, 289],
             [-50, 220], [-48, 219], [27, 289], [-48, 219], [-45, 217], [27, 289], [-45, 217], [-43, 216], [27, 289],
             [-43, 216], [-41, 214], [27, 289], [-41, 214], [-39, 212], [27, 289], [-39, 212], [-37, 209], [27, 289],
             [-37, 209], [-36, 206], [27, 289], [-36, 206], [-34, 203], [27, 289], [-34, 203], [-33, 200], [27, 289],
             [-33, 200], [-32, 196], [27, 289], [-32, 196], [-31, 190], [27, 289], [-31, 190], [-30, 183], [27, 289],
             [-30, 183], [-29, 173], [27, 289], [-29, 173], [-29, 162], [27, 289], [-29, 162], [-28, 148], [27, 289],
             [-28, 148], [-28, 133], [27, 289], [-28, 133], [-28, 116], [27, 289], [-28, 116], [-28, -188], [27, 289],
             [-28, -202], [27, 289], [-28, -188], [-28, -214], [27, 289], [-28, -202], [-29, -225], [27, 289], [-28, -214],
             [-29, -233], [27, 289], [-29, -225], [-29, -233], [40, -188], [27, 289], [-30, -240], [40, -188], [-29, -233],
             [27, 289], [40, -188], [40, 289], [-31, -246], [40, -188], [-30, -240], [-32, -250], [40, -188], [-31, -246],
             [-34, -252], [40, -188], [-32, -250], [-36, -255], [40, -188], [-34, -252], [-38, -258], [40, -188], [-36, -255],
             [-40, -260], [40, -188], [-38, -258], [-40, -260], [40, -201], [40, -188], [-43, -262], [40, -201], [-40, -260],
             [-43, -262], [41, -213], [40, -201], [-45, -264], [41, -213], [-43, -262], [-45, -264], [41, -223], [41, -213],
             [-49, -265], [41, -223], [-45, -264], [-49, -265], [42, -231], [41, -223], [-101, -288], [42, -231], [-49, -265],
             [-101, -288], [43, -238], [42, -231], [-101, -288], [-49, -265], [-53, -267], [-101, -288], [44, -244], [43, -238],
             [-101, -288], [-53, -267], [-58, -269], [-101, -288], [45, -248], [44, -244], [-101, -288], [-58, -269],
             [-64, -270], [-101, -288], [46, -251], [45, -248], [-101, -288], [-64, -270], [-71, -271], [-101, -288],
             [47, -254], [46, -251], [-101, -288], [-71, -271], [-80, -272], [-101, -288], [49, -257], [47, -254], [-101, -288],
             [-80, -272], [-90, -272], [-101, -288], [52, -259], [49, -257], [-101, -273], [-101, -288], [-90, -272],
             [-101, -288], [54, -261], [52, -259], [-101, -288], [58, -264], [54, -261], [-101, -288], [61, -265], [58, -264],
             [-101, -288], [65, -267], [61, -265], [-101, -288], [70, -269], [65, -267], [-101, -288], [76, -270], [70, -269],
             [-101, -288], [84, -271], [76, -270], [-101, -288], [92, -272], [84, -271], [-101, -288], [101, -272], [92, -272],
             [-101, -288], [112, -273], [101, -272], [-101, -288], [112, -288], [112, -273]])
        self.num_2 = numpy.array(
            [[148, -288], [188, -178], [171, -178], [148, -288], [171, -178], [168, -183], [148, -288], [168, -183],
             [165, -188], [148, -288], [165, -188], [161, -193], [148, -288], [161, -193], [158, -197], [148, -288],
             [158, -197], [154, -201], [148, -288], [154, -201], [150, -204], [146, -207], [148, -288], [150, -204],
             [142, -210], [148, -288], [146, -207], [137, -212], [148, -288], [142, -210], [133, -215], [148, -288],
             [137, -212], [128, -216], [148, -288], [133, -215], [123, -218], [148, -288], [128, -216], [118, -219],
             [148, -288], [123, -218], [-187, -288], [148, -288], [118, -219], [-187, -288], [118, -219], [113, -220],
             [-187, -288], [113, -220], [108, -222], [-187, -288], [108, -222], [101, -222], [-187, -288], [101, -222],
             [93, -223], [-187, -288], [93, -223], [84, -224], [-187, -288], [84, -224], [74, -224], [-187, -288], [74, -224],
             [63, -224], [-187, -288], [63, -224], [50, -224], [-187, -288], [50, -224], [-96, -224], [-187, -288], [-96, -224],
             [-109, -200], [-109, -200], [-96, -224], [-87, -216], [-187, -288], [-109, -200], [-146, -235], [-109, -200],
             [-87, -216], [-75, -166], [-187, -273], [-187, -288], [-146, -235], [-87, -216], [-75, -204], [-75, -166],
             [-75, -166], [-75, -204], [-60, -188], [-75, -166], [-60, -188], [-45, -135], [-60, -188], [-41, -168],
             [-45, -135], [-45, -135], [-41, -168], [-20, -145], [-45, -135], [-20, -145], [-19, -105], [-20, -145], [3, -78],
             [-19, -105], [-20, -145], [4, -118], [3, -78], [3, -78], [4, -118], [22, -53], [4, -118], [33, -88], [22, -53],
             [22, -53], [33, -88], [38, -29], [33, -88], [52, -5], [38, -29], [33, -88], [52, -66], [52, -5], [52, -5],
             [52, -66], [63, 17], [52, -66], [70, -45], [63, 17], [63, 17], [70, -45], [71, 39], [70, -45], [78, 61], [71, 39],
             [70, -45], [81, 82], [78, 61], [70, -45], [86, -24], [81, 82], [81, 82], [86, -24], [83, 102], [79, 267],
             [83, 102], [86, -24], [79, 267], [82, 117], [83, 102], [79, 267], [86, -24], [94, 257], [79, 267], [80, 131],
             [82, 117], [86, -24], [100, -4], [94, 257], [77, 145], [80, 131], [79, 267], [94, 257], [100, -4], [108, 245],
             [64, 275], [77, 145], [79, 267], [100, -4], [113, 15], [108, 245], [64, 275], [72, 157], [77, 145], [108, 245],
             [113, 15], [120, 232], [64, 275], [66, 169], [72, 157], [113, 15], [124, 35], [120, 232], [58, 180], [66, 169],
             [64, 275], [120, 232], [124, 35], [130, 219], [47, 281], [58, 180], [64, 275], [124, 35], [134, 55], [130, 219],
             [47, 281], [49, 191], [58, 180], [130, 219], [134, 55], [139, 204], [39, 200], [49, 191], [47, 281], [134, 55],
             [139, 67], [139, 204], [30, 286], [39, 200], [47, 281], [139, 204], [139, 67], [144, 80], [29, 208], [39, 200],
             [30, 286], [139, 204], [144, 80], [145, 189], [11, 288], [29, 208], [30, 286], [144, 80], [148, 92], [145, 189],
             [11, 288], [18, 214], [29, 208], [145, 189], [148, 92], [150, 174], [7, 219], [18, 214], [11, 288], [148, 92],
             [150, 104], [150, 174], [-7, 289], [7, 219], [11, 288], [150, 174], [150, 104], [152, 116], [-7, 289], [-4, 222],
             [7, 219], [150, 174], [152, 116], [153, 158], [-16, 224], [-4, 222], [-7, 289], [152, 116], [154, 128], [153, 158],
             [-25, 289], [-16, 224], [-7, 289], [153, 158], [154, 128], [154, 141], [-29, 225], [-16, 224], [-25, 289],
             [-43, 286], [-29, 225], [-25, 289], [-43, 286], [-41, 225], [-29, 225], [-53, 223], [-41, 225], [-43, 286],
             [-59, 282], [-53, 223], [-43, 286], [-64, 221], [-53, 223], [-59, 282], [-75, 276], [-64, 221], [-59, 282],
             [-75, 276], [-75, 217], [-64, 221], [-85, 213], [-75, 217], [-75, 276], [-89, 268], [-85, 213], [-75, 276],
             [-95, 207], [-85, 213], [-89, 268], [-103, 259], [-95, 207], [-89, 268], [-105, 201], [-95, 207], [-103, 259],
             [-116, 248], [-105, 201], [-103, 259], [-116, 248], [-114, 193], [-105, 201], [-123, 185], [-114, 193],
             [-116, 248], [-128, 235], [-123, 185], [-116, 248], [-130, 176], [-123, 185], [-128, 235], [-138, 221],
             [-130, 176], [-128, 235], [-138, 221], [-137, 165], [-130, 176], [-144, 154], [-137, 165], [-138, 221],
             [-147, 206], [-144, 154], [-138, 221], [-149, 142], [-144, 154], [-147, 206], [-155, 189], [-149, 142],
             [-147, 206], [-155, 189], [-154, 129], [-149, 142], [-170, 129], [-154, 129], [-155, 189], [-170, 129],
             [-155, 189], [-161, 170], [-170, 129], [-161, 170], [-166, 151]])
        self.num_3 = numpy.array(
            [[-129, 219], [-126, 186], [-120, 231], [-139, 168], [-126, 186], [-129, 219], [-126, 186], [-112, 202],
             [-120, 231], [-139, 168], [-129, 219], [-137, 205], [-120, 231], [-112, 202], [-111, 243], [-145, 190],
             [-139, 168], [-137, 205], [-112, 202], [-101, 253], [-111, 243], [-152, 174], [-139, 168], [-145, 190],
             [-112, 202], [-97, 214], [-101, 253], [-101, 253], [-97, 214], [-91, 263], [-97, 214], [-81, 224], [-91, 263],
             [-91, 263], [-81, 224], [-80, 271], [-81, 224], [-68, 278], [-80, 271], [-81, 224], [-65, 231], [-68, 278],
             [-68, 278], [-65, 231], [-55, 284], [-65, 231], [-48, 236], [-55, 284], [-55, 284], [-48, 236], [-42, 288],
             [-48, 236], [-29, 237], [-42, 288], [-42, 288], [-29, 237], [-28, 292], [-29, 237], [-18, 237], [-28, 292],
             [-28, 292], [-18, 237], [-13, 294], [-18, 237], [-7, 235], [-13, 294], [-13, 294], [-7, 235], [1, 294], [-7, 235],
             [2, 232], [1, 294], [1, 294], [2, 232], [12, 229], [1, 294], [12, 229], [20, 293], [12, 229], [21, 224], [20, 293],
             [20, 293], [21, 224], [30, 218], [20, 293], [30, 218], [38, 211], [20, 293], [38, 211], [38, 291], [38, 211],
             [45, 203], [38, 291], [38, 291], [45, 203], [51, 194], [38, 291], [51, 194], [54, 286], [51, 194], [56, 185],
             [54, 286], [54, 286], [56, 185], [60, 175], [54, 286], [60, 175], [62, 165], [54, 286], [62, 165], [64, 153],
             [54, 286], [64, 153], [69, 280], [64, 153], [65, 141], [69, 280], [65, 141], [77, 70], [69, 280], [64, 132],
             [77, 70], [65, 141], [69, 280], [77, 70], [83, 272], [63, 123], [77, 70], [64, 132], [77, 70], [94, 89], [83, 272],
             [56, 51], [77, 70], [63, 123], [83, 272], [94, 89], [95, 262], [56, 51], [63, 123], [62, 114], [94, 89],
             [106, 250], [95, 262], [56, 51], [62, 114], [60, 105], [94, 89], [109, 107], [106, 250], [56, 51], [60, 105],
             [57, 97], [106, 250], [109, 107], [113, 240], [54, 89], [56, 51], [57, 97], [109, 107], [120, 126], [113, 240],
             [54, 89], [56, -41], [56, 51], [113, 240], [120, 126], [120, 231], [50, -37], [56, -41], [54, 89], [56, -41],
             [61, -46], [56, 51], [120, 126], [125, 221], [120, 231], [50, 81], [50, -37], [54, 89], [56, 51], [61, -46],
             [65, -50], [120, 126], [128, 144], [125, 221], [44, -32], [50, -37], [50, 81], [56, 51], [65, -50], [68, -54],
             [125, 221], [128, 144], [129, 211], [44, -32], [50, 81], [45, 73], [56, 51], [68, -54], [71, 45], [128, 144],
             [132, 200], [129, 211], [40, 66], [44, -32], [45, 73], [68, -54], [72, -58], [71, 45], [128, 144], [132, 162],
             [132, 200], [37, -28], [44, -32], [40, 66], [71, 45], [72, -58], [75, -63], [132, 200], [132, 162], [133, 190],
             [33, 58], [37, -28], [40, 66], [71, 45], [75, -63], [79, -69], [132, 162], [134, 179], [133, 190], [29, -24],
             [37, -28], [33, 58], [71, 45], [79, -69], [82, -75], [26, 52], [29, -24], [33, 58], [71, 45], [82, -75], [84, 38],
             [21, -19], [29, -24], [26, 52], [82, -75], [85, -81], [84, 38], [19, 45], [21, -19], [26, 52], [84, 38], [85, -81],
             [89, -90], [13, -15], [21, -19], [19, 45], [84, 38], [89, -90], [92, -100], [10, 39], [13, -15], [19, 45],
             [84, 38], [92, -100], [95, -109], [3, -12], [13, -15], [10, 39], [84, 38], [95, -109], [96, 31], [1, 34], [3, -12],
             [10, 39], [95, -109], [97, -118], [96, 31], [-5, -9], [3, -12], [1, 34], [96, 31], [97, -118], [98, -127],
             [-7, 28], [-5, -9], [1, 34], [96, 31], [98, -127], [99, -136], [-14, -6], [-5, -9], [-7, 28], [96, 31], [99, -136],
             [100, -145], [-17, 24], [-14, -6], [-7, 28], [96, 31], [100, -145], [108, 22], [-23, -4], [-14, -6], [-17, 24],
             [96, -242], [108, 22], [100, -145], [-26, 20], [-23, -4], [-17, 24], [96, -242], [115, -223], [108, 22],
             [96, -242], [100, -145], [99, -158], [-32, -3], [-23, -4], [-26, 20], [108, 22], [115, -223], [118, 13],
             [96, -242], [99, -158], [97, -171], [-36, 16], [-32, -3], [-26, 20], [115, -223], [127, -207], [118, 13],
             [94, -182], [96, -242], [97, -171], [-41, -2], [-32, -3], [-36, 16], [118, 13], [127, -207], [127, 3], [75, -258],
             [96, -242], [94, -182], [-45, 14], [-41, -2], [-36, 16], [127, -207], [135, -6], [127, 3], [75, -258], [94, -182],
             [89, -193], [-51, -2], [-41, -2], [-45, 14], [127, -207], [138, -191], [135, -6], [75, -258], [89, -193],
             [84, -204], [-54, 12], [-51, -2], [-45, 14], [135, -6], [138, -191], [142, -17], [75, -258], [84, -204],
             [76, -214], [-64, -2], [-51, -2], [-54, 12], [138, -191], [146, -173], [142, -17], [68, -224], [75, -258],
             [76, -214], [-64, 10], [-64, -2], [-54, 12], [142, -17], [146, -173], [148, -29], [52, -270], [75, -258],
             [68, -224], [146, -173], [153, -155], [148, -29], [52, -270], [68, -224], [59, -233], [148, -29], [153, -155],
             [153, -41], [49, -240], [52, -270], [59, -233], [153, -155], [157, -54], [153, -41], [27, -280], [52, -270],
             [49, -240], [153, -155], [158, -136], [157, -54], [27, -280], [49, -240], [39, -246], [157, -54], [158, -136],
             [160, -67], [27, -280], [39, -246], [28, -251], [158, -136], [161, -116], [160, -67], [17, -254], [27, -280],
             [28, -251], [160, -67], [161, -116], [161, -81], [0, -288], [27, -280], [17, -254], [161, -116], [162, -95],
             [161, -81], [0, -288], [17, -254], [5, -256], [-6, -257], [0, -288], [5, -256], [-30, -292], [0, -288], [-6, -257],
             [-30, -292], [-6, -257], [-11, -257], [-30, -292], [-11, -257], [-16, -257], [-30, -292], [-16, -257], [-20, -256],
             [-30, -292], [-20, -256], [-25, -255], [-30, -255], [-30, -292], [-25, -255], [-62, -293], [-30, -292],
             [-30, -255], [-62, -293], [-30, -255], [-34, -254], [-62, -293], [-34, -254], [-39, -253], [-62, -293],
             [-39, -253], [-42, -252], [-62, -293], [-42, -252], [-45, -250], [-62, -293], [-45, -250], [-50, -248],
             [-62, -293], [-50, -248], [-55, -246], [-62, -293], [-55, -246], [-60, -243], [-67, -240], [-62, -293],
             [-60, -243], [-77, -293], [-62, -293], [-67, -240], [-77, -293], [-67, -240], [-74, -237], [-80, -233],
             [-77, -293], [-74, -237], [-92, -292], [-77, -293], [-80, -233], [-92, -292], [-80, -233], [-86, -230],
             [-92, -228], [-92, -292], [-86, -230], [-104, -291], [-92, -292], [-92, -228], [-104, -291], [-92, -228],
             [-96, -226], [-104, -291], [-96, -226], [-100, -224], [-104, -291], [-100, -224], [-103, -223], [-106, -222],
             [-104, -291], [-103, -223], [-116, -289], [-104, -291], [-106, -222], [-116, -289], [-106, -222], [-109, -221],
             [-116, -289], [-109, -221], [-112, -220], [-116, -289], [-112, -220], [-115, -220], [-118, -219], [-116, -289],
             [-115, -220], [-125, -286], [-116, -289], [-118, -219], [-125, -286], [-118, -219], [-121, -219], [-125, -286],
             [-121, -219], [-124, -218], [-127, -218], [-125, -286], [-124, -218], [-133, -283], [-125, -286], [-127, -218],
             [-133, -283], [-127, -218], [-131, -218], [-135, -219], [-133, -283], [-131, -218], [-140, -279], [-133, -283],
             [-135, -219], [-140, -279], [-135, -219],
             [-138, -220], [-142, -221], [-140, -279], [-138, -220], [-146, -275], [-140, -279], [-142, -221], [-146, -275],
             [-142, -221], [-145, -223], [-148, -225], [-146, -275], [-145, -223], [-150, -271], [-146, -275], [-148, -225],
             [-151, -228], [-150, -271], [-148, -225], [-154, -267], [-150, -271], [-151, -228], [-154, -267], [-151, -228],
             [-153, -230], [-156, -233], [-154, -267], [-153, -230], [-157, -262], [-154, -267], [-156, -233], [-157, -236],
             [-157, -262], [-156, -233], [-159, -258], [-157, -262], [-157, -236], [-159, -258], [-157, -236], [-159, -239],
             [-160, -242], [-159, -258], [-159, -239], [-160, -254], [-159, -258], [-160, -242], [-161, -245], [-160, -254],
             [-160, -242], [-161, -249], [-160, -254], [-161, -245]])
        self.num_4 = numpy.array(
            [[47, 65], [116, -138], [116, -79], [47, 65], [116, -288], [116, -138], [116, -79], [116, -138], [193, -138],
             [47, 65], [116, -79], [116, 134], [116, -288], [47, 65], [47, -79], [116, -79], [193, -138], [193, -79], [47, 65],
             [116, 134], [70, 289], [116, -288], [47, -79], [47, -138], [70, 289], [116, 134], [116, 289], [47, 65], [70, 289],
             [47, 201], [-97, -79], [47, -138], [47, -79], [116, -288], [47, -138], [47, -288], [-192, -85], [47, 201],
             [70, 289], [-157, -138], [47, -138], [-97, -79], [-192, -85], [-151, -79], [47, 201], [-157, -138], [-97, -79],
             [-151, -79], [-192, -85], [-157, -138], [-151, -79], [-192, -138], [-157, -138], [-192, -85]])
        self.num_5 = numpy.array(
            [[-145, 68], [-124, 67], [-74, 141], [-124, 67], [-103, 65], [-74, 141], [-145, 68], [-74, 141], [-37, 289],
             [-103, 65], [-84, 62], [-74, 141], [-74, 141], [-37, 217], [-37, 289], [-84, 62], [-67, 59], [-74, 141],
             [-37, 289], [-37, 217], [133, 217], [-74, 141], [-67, 59], [-50, 56], [-37, 289], [133, 217], [166, 289],
             [-74, 141], [-50, 56], [-43, 136], [-50, 56], [-35, 51], [-43, 136], [-43, 136], [-35, 51], [-21, 46], [-43, 136],
             [-21, 46], [-14, 128], [-21, 46], [-5, 39], [-14, 128], [-14, 128], [-5, 39], [9, 31], [-14, 128], [9, 31],
             [12, 118], [9, 31], [23, 22], [12, 118], [12, 118], [23, 22], [36, 12], [12, 118], [36, 12], [37, 107], [36, 12],
             [48, 1], [37, 107], [37, 107], [48, 1], [59, -9], [37, 107], [59, -9], [60, 93], [59, -9], [69, -22], [60, 93],
             [60, 93], [69, -22], [78, -35], [60, 93], [78, -35], [81, 77], [78, -35], [85, -48], [81, 77], [81, 77], [85, -48],
             [91, -61], [81, 77], [91, -61], [96, -75], [81, 77], [96, -75], [99, -89], [81, 77], [99, -89], [101, 59],
             [99, -89], [101, -103], [101, 59], [101, 59], [101, -103], [102, -118], [101, 59], [102, -118], [107, -206],
             [100, -214], [107, -206], [102, -118], [101, 59], [107, -206], [114, -197], [100, -214], [102, -118], [101, -133],
             [101, 59], [114, -197], [116, 42], [99, -147], [100, -214], [101, -133], [114, -197], [121, -187], [116, 42],
             [92, -222], [100, -214], [99, -147], [116, 42], [121, -187], [127, -178], [92, -222], [99, -147], [95, -160],
             [116, 42], [127, -178], [128, 25], [90, -173], [92, -222], [95, -160], [127, -178], [133, -167], [128, 25],
             [84, -229], [92, -222], [90, -173], [128, 25], [133, -167], [138, 6], [83, -185], [84, -229], [90, -173],
             [133, -167], [139, -157], [138, 6], [76, -236], [84, -229], [83, -185], [138, 6], [139, -157], [143, -146],
             [75, -197], [76, -236], [83, -185], [138, 6], [143, -146], [146, -12], [68, -243], [76, -236], [75, -197],
             [143, -146], [147, -134], [146, -12], [65, -208], [68, -243], [75, -197], [146, -12], [147, -134], [151, -123],
             [59, -249], [68, -243], [65, -208], [146, -12], [151, -123], [152, -32], [54, -218], [59, -249], [65, -208],
             [151, -123], [153, -111], [152, -32], [50, -255], [59, -249], [54, -218], [152, -32], [153, -111], [155, -99],
             [43, -226], [50, -255], [54, -218], [152, -32], [155, -99], [155, -52], [40, -260], [50, -255], [43, -226],
             [155, -99], [156, -87], [155, -52], [31, -233], [40, -260], [43, -226], [155, -52], [156, -87], [156, -74],
             [31, -265], [40, -260], [31, -233], [19, -238], [31, -265], [31, -233], [17, -271], [31, -265], [19, -238],
             [6, -242], [17, -271], [19, -238], [3, -276], [17, -271], [6, -242], [-7, -244], [3, -276], [6, -242], [-10, -280],
             [3, -276], [-7, -244], [-20, -245], [-10, -280], [-7, -244], [-24, -283], [-10, -280], [-20, -245], [-30, -244],
             [-24, -283], [-20, -245], [-38, -286], [-24, -283], [-30, -244], [-39, -243], [-38, -286], [-30, -244],
             [-53, -287], [-38, -286], [-39, -243], [-53, -287], [-39, -243], [-48, -241], [-57, -238], [-53, -287],
             [-48, -241], [-67, -288], [-53, -287], [-57, -238], [-67, -288], [-57, -238], [-66, -234], [-75, -229],
             [-67, -288], [-66, -234], [-81, -287], [-67, -288], [-75, -229], [-84, -223], [-81, -287], [-75, -229],
             [-94, -286], [-81, -287], [-84, -223], [-94, -286], [-84, -223], [-89, -219], [-94, -216], [-94, -286],
             [-89, -219], [-106, -284], [-94, -286], [-94, -216], [-106, -284], [-94, -216], [-99, -213], [-106, -284],
             [-99, -213], [-103, -210], [-106, -208], [-106, -284], [-103, -210], [-116, -282], [-106, -284], [-106, -208],
             [-116, -282], [-106, -208], [-109, -207], [-116, -282], [-109, -207], [-112, -205], [-116, -282], [-112, -205],
             [-114, -205], [-117, -204], [-116, -282], [-114, -205], [-126, -279], [-116, -282], [-117, -204], [-126, -279],
             [-117, -204], [-119, -203], [-126, -279], [-119, -203], [-122, -203], [-126, -279], [-122, -203], [-125, -203],
             [-128, -203], [-126, -279], [-125, -203], [-134, -275], [-126, -279], [-128, -203], [-134, -275], [-128, -203],
             [-131, -203], [-135, -203], [-134, -275], [-131, -203], [-141, -270], [-134, -275], [-135, -203], [-141, -270],
             [-135, -203], [-139, -203], [-142, -204], [-141, -270], [-139, -203], [-147, -265], [-141, -270], [-142, -204],
             [-147, -265], [-142, -204], [-146, -205], [-149, -207], [-147, -265], [-146, -205], [-153, -260], [-147, -265],
             [-149, -207], [-153, -260], [-149, -207], [-152, -209], [-155, -211], [-153, -260], [-152, -209], [-157, -255],
             [-153, -260], [-155, -211], [-157, -214], [-157, -255], [-155, -211], [-160, -249], [-157, -255], [-157, -214],
             [-160, -249], [-157, -214], [-160, -217], [-161, -220], [-160, -249], [-160, -217], [-163, -244], [-160, -249],
             [-161, -220], [-163, -222], [-163, -244], [-161, -220], [-164, -238], [-163, -244], [-163, -222], [-164, -238],
             [-163, -222], [-164, -225], [-165, -229], [-164, -238], [-164, -225], [-165, -232], [-164, -238], [-165, -229]])
        self.num_6 = numpy.array(
            [[125, 271], [138, 274], [131, 294], [131, 294], [138, 274], [144, 294], [117, 293], [125, 271], [131, 294],
             [138, 274], [153, 276], [144, 294], [112, 268], [125, 271], [117, 293], [144, 294], [153, 276], [168, 278],
             [104, 291], [112, 268], [117, 293], [144, 294], [168, 278], [168, 294], [100, 265], [112, 268], [104, 291],
             [90, 288], [100, 265], [104, 291], [88, 260], [100, 265], [90, 288], [76, 285], [88, 260], [90, 288], [76, 285],
             [78, 256], [88, 260], [68, 251], [78, 256], [76, 285], [62, 281], [68, 251], [76, 285], [58, 245], [68, 251],
             [62, 281], [47, 276], [58, 245], [62, 281], [47, 276], [48, 239], [58, 245], [38, 231], [48, 239], [47, 276],
             [32, 270], [38, 231], [47, 276], [28, 223], [38, 231], [32, 270], [17, 263], [28, 223], [32, 270], [17, 263],
             [18, 215], [28, 223], [9, 206], [18, 215], [17, 263], [2, 254], [9, 206], [17, 263], [0, 196], [9, 206], [2, 254],
             [-13, 244], [0, 196], [2, 254], [-13, 244], [-9, 186], [0, 196], [-17, 175], [-9, 186], [-13, 244], [-28, 232],
             [-17, 175], [-13, 244], [-28, 232], [-25, 165], [-17, 175], [-33, 154], [-25, 165], [-28, 232], [-44, 219],
             [-33, 154], [-28, 232], [-44, 219], [-40, 142], [-33, 154], [-47, 131], [-40, 142], [-44, 219], [-60, 204],
             [-47, 131], [-44, 219], [-60, 204], [-53, 118], [-47, 131], [-60, 204], [-59, 106], [-53, 118], [-64, 92],
             [-59, 106], [-60, 204], [-76, 189], [-64, 92], [-60, 204], [-76, 189], [-70, 78], [-64, 92], [-76, 189], [-75, 63],
             [-70, 78], [-80, 48], [-75, 63], [-76, 189], [-91, 173], [-80, 48], [-76, 189], [-91, 173], [-84, 32], [-80, 48],
             [-91, 1], [-84, 32], [-91, 173], [-91, 1], [-81, 8], [-84, 32], [-104, 156], [-91, 1], [-91, 173], [-84, 32],
             [-81, 8], [-72, 13], [-104, 156], [-93, -13], [-91, 1], [-84, 32], [-72, 13], [-67, 43], [-104, 156], [-95, -28],
             [-93, -13], [-72, 13], [-64, 18], [-67, 43], [-104, 156], [-96, -42], [-95, -28], [-67, 43], [-64, 18], [-56, 22],
             [-104, 156], [-98, -55], [-96, -42], [-67, 43], [-56, 22], [-50, 53], [-104, 156], [-98, -67], [-98, -55],
             [-56, 22], [-49, 25], [-50, 53], [-104, 156], [-99, -78], [-98, -67], [-50, 53], [-49, 25], [-43, 28], [-104, 156],
             [-99, -88], [-99, -78], [-50, 53], [-43, 28], [-38, 31], [-104, 156], [-99, -255], [-99, -88], [-50, 53],
             [-38, 31], [-32, 32], [-120, -232], [-99, -255], [-104, 156], [-99, -255], [-99, -100], [-99, -88], [-50, 53],
             [-32, 32], [-32, 60], [-120, -232], [-104, 156], [-117, 139], [-99, -255], [-98, -112], [-99, -100], [-32, 32],
             [-27, 34], [-32, 60], [-128, 121], [-120, -232], [-117, 139], [-99, -255], [-96, -124], [-98, -112], [-32, 60],
             [-27, 34], [-22, 35], [-138, -208], [-120, -232], [-128, 121], [-99, -255], [-94, -137], [-96, -124], [-32, 60],
             [-22, 35], [-17, 36], [-138, 102], [-138, -208], [-128, 121], [-99, -255], [-91, -149], [-94, -137], [-32, 60],
             [-17, 36], [-15, 66], [-152, -183], [-138, -208], [-138, 102], [-99, -255], [-88, -162], [-91, -149], [-17, 36],
             [-13, 37], [-15, 66], [-152, -183], [-138, 102], [-148, 83], [-99, -255], [-87, -265], [-88, -162], [-15, 66],
             [-13, 37], [-8, 37], [-156, 63], [-152, -183], [-148, 83], [-88, -162], [-87, -265], [-84, -175], [-15, 66],
             [-8, 37], [-3, 37], [-164, -155], [-152, -183], [-156, 63], [-87, -265], [-79, -189], [-84, -175], [-15, 66],
             [-3, 37], [1, 70], [-164, -155], [-156, 63], [-163, 43], [-87, -265], [-74, -201], [-79, -189], [-3, 37], [10, 36],
             [1, 70], [-168, 23], [-164, -155], [-163, 43], [-87, -265], [-74, -274], [-74, -201], [1, 70], [10, 36], [19, 73],
             [-172, -125], [-164, -155], [-168, 23], [-74, -201], [-74, -274], [-69, -212], [10, 36], [24, 33], [19, 73],
             [-173, 2], [-172, -125], [-168, 23], [-74, -274], [-62, -223], [-69, -212], [19, 73], [24, 33], [36, 74],
             [-177, -94], [-172, -125], [-173, 2], [-74, -274], [-61, -281], [-62, -223], [24, 33], [36, 28], [36, 74],
             [-177, -94], [-173, 2], [-176, -18], [-62, -223], [-61, -281], [-55, -233], [36, 74], [36, 28], [48, 20],
             [-178, -40], [-177, -94], [-176, -18], [-61, -281], [-48, -242], [-55, -233], [36, 74], [48, 20], [52, 73],
             [-178, -61], [-177, -94], [-178, -40], [-61, -281], [-47, -286], [-48, -242], [48, 20], [58, 11], [52, 73],
             [-48, -242], [-47, -286], [-40, -250], [52, 73], [58, 11], [68, 70], [-47, -286], [-33, -256], [-40, -250],
             [58, 11], [68, 0], [68, 70], [-47, -286], [-32, -290], [-33, -256], [68, 70], [68, 0], [76, -14], [-33, -256],
             [-32, -290], [-27, -260], [68, 70], [76, -14], [83, 65], [-32, -290], [-20, -263], [-27, -260], [76, -14],
             [84, -29], [83, 65], [-32, -290], [-16, -293], [-20, -263], [83, 65], [84, -29], [91, -46], [-20, -263],
             [-16, -293], [-12, -266], [83, 65], [91, -46], [96, -63], [-16, -293], [-4, -268], [-12, -266], [83, 65],
             [96, -63], [97, 58], [-16, -293], [0, -293], [-4, -268], [96, -63], [100, -80], [97, 58], [-4, -268], [0, -293],
             [3, -269], [97, 58], [100, -80], [103, -99], [0, -293], [11, -270], [3, -269], [97, 58], [103, -99], [104, -118],
             [0, -293], [22, -269], [11, -270], [97, 58], [104, -118], [111, 50], [0, -293], [23, -292], [22, -269],
             [104, -118], [105, -138], [111, 50], [22, -269], [23, -292], [32, -267], [104, -257], [111, 50], [105, -138],
             [23, -292], [41, -263], [32, -267], [104, -257], [121, -241], [111, 50], [104, -257], [105, -138], [104, -155],
             [23, -292], [45, -288], [41, -263], [111, 50], [121, -241], [124, 39], [103, -172], [104, -257], [104, -155],
             [41, -263], [45, -288], [50, -259], [121, -241], [136, -223], [124, 39], [86, -270], [104, -257], [103, -172],
             [45, -288], [59, -252], [50, -259], [124, 39], [136, -223], [136, 26], [86, -270], [103, -172], [100, -187],
             [45, -288], [66, -280], [59, -252], [136, -223], [148, -206], [136, 26], [86, -270], [100, -187], [96, -201],
             [59, -252], [66, -280], [68, -245], [136, 26], [148, -206], [148, 13], [86, -270], [96, -201], [91, -214],
             [66, -280], [76, -235], [68, -245], [148, -206], [157, -188], [148, 13], [84, -225], [86, -270], [91, -214],
             [66, -280], [84, -225], [76, -235], [148, 13], [157, -188], [157, -1], [66, -280], [86, -270], [84, -225],
             [157, -188], [165, -170], [157, -1], [157, -1], [165, -170], [165, -17], [165, -170], [171, -35], [165, -17],
             [165, -170], [171, -151], [171, -35], [171, -35], [171, -151], [176, -132], [171, -35], [176, -132], [176, -53],
             [176, -132], [178, -72], [176, -53], [176, -132], [178, -113], [178, -72], [178, -72], [178, -113], [179, -93]])
        self.num_7 = numpy.array(
            [[-178, 154], [-165, 150], [-159, 161], [-178, 154], [-159, 161], [-152, 171], [-178, 154], [-152, 171],
             [-145, 180], [-178, 154], [-145, 180], [-137, 189], [-178, 154], [-137, 189], [-128, 197], [-178, 154],
             [-128, 197], [-123, 289], [-128, 197], [-119, 203], [-123, 289], [-123, 289], [-119, 203], [-109, 209],
             [-123, 289], [-109, 209], [-103, 212], [-123, 289], [-103, 212], [-95, 215], [-123, 289], [-95, 215], [-87, 217],
             [-123, 289], [-87, 217], [-77, 219], [-123, 289], [-77, 219], [-67, 220], [-123, 289], [-67, 220], [-55, 221],
             [-123, 289], [-55, 221], [-42, 221], [-123, 289], [-42, 221], [113, 221], [-123, 289], [113, 221], [179, 289],
             [-8, -288], [179, 289], [113, 221], [-8, -288], [179, 274], [179, 289], [-55, -288], [-8, -288], [113, 221]])
        self.num_8 = numpy.array(
            [[-127, -243], [-113, -256], [-120, -58], [-120, -58], [-113, -256], [-109, -46], [-129, -69], [-127, -243],
             [-120, -58], [-113, -256], [-98, -151], [-109, -46], [-136, -231], [-127, -243], [-129, -69], [-113, -256],
             [-98, -267], [-98, -151], [-109, -46], [-98, -151], [-98, -140], [-138, -80], [-136, -231], [-129, -69],
             [-98, -151], [-98, -267], [-98, -166], [-109, -46], [-98, -140], [-97, -129], [-144, -219], [-136, -231],
             [-138, -80], [-98, -267], [-96, -180], [-98, -166], [-109, -46], [-97, -129], [-96, -35], [-144, -219],
             [-138, -80], [-144, -90], [-98, -267], [-93, -194], [-96, -180], [-97, -129], [-95, -118], [-96, -35],
             [-150, -101], [-144, -219], [-144, -90], [-98, -267], [-89, -206], [-93, -194], [-96, -35], [-95, -118],
             [-93, -107], [-151, -206], [-144, -219], [-150, -101], [-98, -267], [-83, -217], [-89, -206], [-96, -35],
             [-93, -107], [-90, -97], [-154, -111], [-151, -206], [-150, -101], [-98, -267], [-81, -277], [-83, -217],
             [-96, -35], [-90, -97], [-86, -87], [-156, -194], [-151, -206], [-154, -111], [-83, -217], [-81, -277],
             [-77, -228], [-96, -35], [-86, -87], [-82, -23], [-158, -122], [-156, -194], [-154, -111], [-81, -277],
             [-69, -238], [-77, -228], [-86, -87], [-82, -77], [-82, -23], [-160, -181], [-156, -194], [-158, -122],
             [-81, -277], [-63, -284], [-69, -238], [-82, -23], [-82, -77], [-77, -67], [-161, -133], [-160, -181],
             [-158, -122], [-69, -238], [-63, -284], [-60, -246], [-82, -23], [-77, -67], [-71, -58], [-162, -168],
             [-160, -181], [-161, -133], [-63, -284], [-51, -253], [-60, -246], [-82, -23], [-71, -58], [-67, -10],
             [-162, -143], [-162, -168], [-161, -133], [-63, -284], [-44, -289], [-51, -253], [-71, -58], [-64, -49],
             [-67, -10], [-163, -154], [-162, -168], [-162, -143], [-51, -253], [-44, -289], [-41, -259], [-67, -10],
             [-64, -49], [-57, -40], [-44, -289], [-30, -264], [-41, -259], [-67, -10], [-57, -40], [-50, 1], [-44, -289],
             [-23, -292], [-30, -264], [-57, -40], [-49, -31], [-50, 1], [-30, -264], [-23, -292], [-18, -267], [-53, 103],
             [-50, 1], [-49, -31], [-23, -292], [-7, -269], [-18, -267], [-68, 17], [-50, 1], [-53, 103], [-53, 103],
             [-49, -31], [-40, -22], [-23, -292], [0, -293], [-7, -269], [-68, 17], [-53, 103], [-58, 109], [-53, 103],
             [-40, -22], [-30, -13], [-7, -269], [0, -293], [5, -270], [-68, 17], [-58, 109], [-63, 115], [-53, 103],
             [-30, -13], [-6, -33], [0, -293], [18, -269], [5, -270], [-68, 120], [-68, 17], [-63, 115], [-53, 103], [-6, -33],
             [15, 46], [0, -293], [19, -292], [18, -269], [-84, 31], [-68, 17], [-68, 120], [-6, -33], [15, -52], [15, 46],
             [18, -269], [19, -292], [29, -268], [-84, 31], [-68, 120], [-73, 126], [15, 46], [15, -52], [28, 59], [19, -292],
             [39, -290], [29, -268], [-84, 31], [-73, 126], [-77, 132], [15, -52], [34, 30], [28, 59], [29, -268], [39, -290],
             [40, -265], [-84, 31], [-77, 132], [-81, 138], [15, -52], [35, -70], [34, 30], [28, 59], [34, 30], [40, 71],
             [39, -290], [51, -261], [40, -265], [-84, 31], [-81, 138], [-84, 144], [34, 30], [35, -70], [52, -86], [34, 30],
             [51, 82], [40, 71], [39, -290], [57, -286], [51, -261], [-87, 151], [-84, 31], [-84, 144], [34, 30], [52, -86],
             [54, 14], [34, 30], [54, 42], [51, 82], [51, -261], [57, -286], [60, -257], [-99, 45], [-84, 31], [-87, 151],
             [52, -86], [67, -102], [54, 14], [51, 82], [54, 42], [60, 92], [57, -286], [69, -251], [60, -257], [-99, 45],
             [-87, 151], [-90, 157], [54, 14], [67, -102], [72, 0], [54, 42], [67, 101], [60, 92], [57, -286], [74, -279],
             [69, -251], [-99, 45], [-90, 157], [-92, 163], [67, -102], [79, -116], [72, 0], [54, 42], [71, 54], [67, 101],
             [69, -251], [74, -279], [77, -245], [-99, 45], [-92, 163], [-93, 169], [72, 0], [79, -116], [88, -13], [67, 101],
             [71, 54], [73, 110], [74, -279], [84, -237], [77, -245], [-99, 45], [-93, 169], [-95, 176], [79, -116], [89, -129],
             [88, -13], [71, 54], [78, 118], [73, 110], [74, -279], [90, -272], [84, -237], [-99, 45], [-95, 176], [-95, 182],
             [88, -13], [89, -129], [93, -136], [71, 54], [82, 125], [78, 118], [84, -237], [90, -272], [90, -229], [-99, 45],
             [-95, 182], [-95, 188], [88, -13], [93, -136], [96, -143], [71, 54], [85, 133], [82, 125], [90, -272], [95, -221],
             [90, -229], [-101, 265], [-99, 45], [-95, 188], [88, -13], [96, -143], [99, -150], [71, 54], [87, 66], [85, 133],
             [90, -272], [99, -212], [95, -221], [-111, 57], [-99, 45], [-101, 265], [-101, 265], [-95, 188], [-95, 197],
             [88, -13], [99, -150], [101, -158], [85, 133], [87, 66], [87, 141], [90, -272], [102, -203], [99, -212],
             [-113, 254], [-111, 57], [-101, 265], [-101, 265], [-95, 197], [-93, 206], [88, -13], [101, -158], [102, -26],
             [87, 66], [89, 150], [87, 141], [90, -272], [104, -262], [102, -203], [-122, 69], [-111, 57], [-113, 254],
             [-101, 265], [-93, 206], [-90, 215], [101, -158], [103, -166], [102, -26], [87, 66], [90, 159], [89, 150],
             [102, -203], [104, -262], [104, -193], [-125, 243], [-122, 69], [-113, 254], [-101, 265], [-90, 215], [-87, 274],
             [102, -26], [103, -166], [104, -174], [87, 66], [91, 168], [90, 159], [104, -193], [104, -262], [104, -183],
             [-130, 80], [-122, 69], [-125, 243], [-90, 215], [-87, 223], [-87, 274], [102, -26], [104, -174], [104, -183],
             [87, 66], [97, 267], [91, 168], [104, -183], [104, -262], [114, -38], [-134, 230], [-130, 80], [-125, 243],
             [-87, 274], [-87, 223], [-82, 231], [102, -26], [104, -183], [114, -38], [87, 66], [100, 77], [97, 267], [91, 168],
             [97, 267], [91, 177], [104, -262], [118, -251], [114, -38], [-137, 90], [-130, 80], [-134, 230], [-87, 274],
             [-82, 231], [-76, 239], [97, 267], [100, 77], [109, 257], [91, 189], [91, 177], [97, 267], [114, -38], [118, -251],
             [124, -49], [-142, 217], [-137, 90], [-134, 230], [-87, 274], [-76, 239], [-72, 281], [100, 77], [111, 88],
             [109, 257], [83, 275], [91, 189], [97, 267], [118, -251], [130, -239], [124, -49], [-142, 217], [-142, 100],
             [-137, 90], [-76, 239], [-69, 246], [-72, 281], [109, 257], [111, 88], [120, 246], [83, 275], [90, 201], [91, 189],
             [124, -49], [130, -239], [131, -59], [-146, 109], [-142, 100], [-142, 217], [-72, 281], [-69, 246], [-61, 252],
             [111, 88], [120, 98], [120, 246], [83, 275], [87, 211], [90, 201], [130, -239], [140, -71], [131, -59],
             [-148, 204], [-146, 109], [-142, 217], [-72, 281], [-61, 252], [-56, 287], [120, 246], [120, 98], [128, 107],
             [83, 275], [84, 221], [87, 211], [130, -239], [140, -225], [140, -71], [-150, 119], [-146, 109], [-148, 204],
             [-61, 252], [-52, 258], [-56, 287], [120, 246], [128, 107], [130, 235], [79, 230], [84, 221], [83, 275],
             [140, -71], [140, -225], [147, -83], [-153, 189], [-150, 119], [-148, 204], [-56, 287], [-52, 258], [-43, 262],
             [128, 107], [134, 117], [130, 235], [68, 282], [79, 230], [83, 275], [140, -225], [149, -211], [147, -83], \
             [-153, 189], [-153, 129], [-150, 119], [-56, 287], [-43, 262], [-39, 291], [130, 235], [134, 117], [137, 223],
             [68, 282], [74, 238], [79, 230], [147, -83], [149, -211], [153, -96], [-155, 139], [-153, 129], [-153, 189],
             [-43, 262], [-33, 266], [-39, 291], [134, 117], [139, 126], [137, 223], [67, 246], [74, 238], [68, 282],
             [149, -211], [155, -197], [153, -96], [-155, 175], [-155, 139], [-153, 189], [-39, 291], [-33, 266], [-23, 269],
             [137, 223], [139, 126], [143, 211], [53, 288], [67, 246], [68, 282], [153, -96], [155, -197], [158, -109],
             [-156, 149], [-155, 139], [-155, 175], [-39, 291], [-23, 269], [-20, 294], [139, 126], [143, 135], [143, 211],
             [53, 288], [60, 252], [67, 246], [155, -197], [160, -181], [158, -109], [-156, 159], [-156, 149], [-155, 175],
             [-23, 269], [-11, 270], [-20, 294], [143, 211], [143, 135], [147, 145], [52, 258], [60, 252], [53, 288],
             [158, -109], [160, -181], [161, -122], [-20, 294], [-11, 270], [0, 294], [143, 211], [147, 145], [147, 199],
             [36, 291], [52, 258], [53, 288], [160, -181], [163, -165], [161, -122], [-11, 270], [0, 271], [0, 294], [147, 145],
             [149, 154], [147, 199], [36, 291], [43, 262], [52, 258], [161, -122], [163, -165], [163, -135], [0, 294], [0, 271],
             [11, 270], [147, 199], [149, 154], [150, 186], [33, 266], [43, 262], [36, 291], [163, -165], [164, -148],
             [163, -135], [0, 294], [11, 270], [18, 294], [149, 154], [150, 163], [150, 186], [18, 294], [33, 266], [36, 291],
             [11, 270], [22, 269], [18, 294], [150, 186], [150, 163], [151, 172], [18, 294], [22, 269], [33, 266]])
        self.num_9 = numpy.array(
            [[-167, -294], [-151, -278], [-167, -278], [-167, -294], [-143, -294], [-151, -278], [-151, -278], [-143, -294],
             [-136, -276], [-143, -294], [-121, -273], [-136, -276], [-143, -294], [-120, -293], [-121, -273], [-121, -273],
             [-120, -293], [-107, -270], [-120, -293], [-98, -290], [-107, -270], [-107, -270], [-98, -290], [-93, -265],
             [-98, -290], [-79, -260], [-93, -265], [-98, -290], [-77, -286], [-79, -260], [-79, -260], [-77, -286],
             [-65, -253], [-77, -286], [-56, -279], [-65, -253], [-65, -253], [-56, -279], [-52, -246], [-56, -279],
             [-39, -236], [-52, -246], [-56, -279], [-35, -271], [-39, -236], [-39, -236], [-35, -271], [-26, -226],
             [-35, -271], [-15, -261], [-26, -226], [-26, -226], [-15, -261], [-13, -213], [-15, -261], [0, -200], [-13, -213],
             [-15, -261], [3, -250], [0, -200], [0, -200], [3, -250], [12, -184], [3, -250], [24, -168], [12, -184], [3, -250],
             [26, -234], [24, -168], [24, -168], [26, -234], [36, -150], [26, -234], [47, -132], [36, -150], [26, -234],
             [48, -217], [47, -132], [47, -132], [48, -217], [57, -113], [48, -217], [66, -94], [57, -113], [48, -217],
             [68, -199], [66, -94], [66, -94], [68, -199], [73, -74], [68, -199], [80, -54], [73, -74], [68, -199], [85, -33],
             [80, -54], [68, -199], [86, -179], [85, -33], [85, -33], [86, -179], [86, -7], [86, -7], [86, -179], [92, -3],
             [80, -12], [85, -33], [86, -7], [86, -179], [94, 12], [92, -3], [67, -44], [85, -33], [80, -12], [86, -179],
             [96, 26], [94, 12], [67, -44], [80, -12], [73, -16], [86, -179], [97, 39], [96, 26], [67, -44], [73, -16],
             [67, -19], [86, -179], [98, 51], [97, 39], [60, -23], [67, -44], [67, -19], [86, -179], [99, 63], [98, 51],
             [49, -54], [67, -44], [60, -23], [86, -179], [103, -159], [99, 63], [49, -54], [60, -23], [53, -26], [99, 63],
             [103, -159], [99, 74], [45, -28], [49, -54], [53, -26], [99, 74], [103, -159], [103, 253], [31, -62], [49, -54],
             [45, -28], [103, 253], [103, -159], [118, 237], [99, 74], [103, 253], [100, 84], [31, -62], [45, -28], [38, -31],
             [103, -159], [119, -137], [118, 237], [99, 95], [100, 84], [103, 253], [31, -33], [31, -62], [38, -31], [118, 237],
             [119, -137], [133, -114], [99, 107], [99, 95], [103, 253], [14, -68], [31, -62], [31, -33], [118, 237],
             [133, -114], [134, 216], [88, 266], [99, 107], [103, 253], [14, -68], [31, -33], [24, -35], [133, -114],
             [145, -90], [134, 216], [88, 266], [97, 119], [99, 107], [14, -68], [24, -35], [17, -36], [134, 216], [145, -90],
             [148, 194], [88, 266], [95, 132], [97, 119], [11, -37], [14, -68], [17, -36], [145, -90], [155, -66], [148, 194],
             [88, 266], [93, 144], [95, 132], [-1, -72], [14, -68], [11, -37], [148, 194], [155, -66], [159, 170], [88, 266],
             [90, 157], [93, 144], [-1, -72], [11, -37], [5, -37], [155, -66], [164, -42], [159, 170], [86, 171], [90, 157],
             [88, 266], [-1, -72], [5, -37], [0, -38], [159, 170], [164, -42], [168, 144], [71, 276], [86, 171], [88, 266],
             [-10, -37], [-1, -72], [0, -38], [164, -42], [170, -17], [168, 144], [71, 276], [82, 184], [86, 171], [-17, -75],
             [-1, -72], [-10, -37], [168, 144], [170, -17], [174, 118], [71, 276], [77, 196], [82, 184], [-21, -35], [-17, -75],
             [-10, -37], [170, -17], [175, 8], [174, 118], [71, 276], [72, 207], [77, 196], [-33, -75], [-17, -75], [-21, -35],
             [174, 118], [175, 8], [178, 90], [66, 217], [72, 207], [71, 276], [-33, -75], [-21, -35], [-31, -31], [175, 8],
             [178, 34], [178, 90], [54, 284], [66, 217], [71, 276], [-41, -26], [-33, -75], [-31, -31], [178, 90], [178, 34],
             [179, 61], [54, 284], [60, 227], [66, 217], [-50, -75], [-33, -75], [-41, -26], [54, 235], [60, 227], [54, 284],
             [-50, -19], [-50, -75], [-41, -26], [36, 290], [54, 235], [54, 284], [-66, -72], [-50, -75], [-50, -19], [36, 290],
             [47, 243], [54, 235], [-66, -72], [-50, -19], [-58, -11], [36, 290], [39, 249], [47, 243], [-67, -2], [-66, -72],
             [-58, -11], [32, 255], [39, 249], [36, 290], [-81, -67], [-66, -72], [-67, -2], [18, 294], [32, 255], [36, 290],
             [-81, -67], [-67, -2], [-76, 12], [18, 294], [24, 260], [32, 255], [-85, 29], [-81, -67], [-76, 12], [15, 263],
             [24, 260], [18, 294], [-95, -61], [-81, -67], [-85, 29], [-1, 295], [15, 263], [18, 294], [-95, -61], [-85, 29],
             [-92, 47], [-1, 295], [7, 266], [15, 263], [-97, 67], [-95, -61], [-92, 47], [-1, 267], [7, 266], [-1, 295],
             [-109, -52], [-95, -61], [-97, 67], [-24, 294], [-1, 267], [-1, 295], [-109, -52], [-97, 67], [-101, 88],
             [-24, 294], [-10, 268], [-1, 267], [-109, -52], [-101, 88], [-103, 111], [-24, 294], [-21, 267], [-10, 268],
             [-109, -52], [-103, 111], [-104, 135], [-31, 265], [-21, 267], [-24, 294], [-120, 243], [-109, -52], [-104, 135],
             [-45, 289], [-31, 265], [-24, 294], [-123, -42], [-109, -52], [-120, 243], [-120, 243], [-104, 135], [-103, 259],
             [-45, 289], [-40, 262], [-31, 265], [-135, 224], [-123, -42], [-120, 243], [-104, 135], [-103, 153], [-103, 259],
             [-50, 257], [-40, 262], [-45, 289], [-135, -30], [-123, -42], [-135, 224], [-103, 259], [-103, 153], [-101, 170],
             [-66, 282], [-50, 257], [-45, 289], [-146, 207], [-135, -30], [-135, 224], [-103, 259], [-101, 170], [-99, 186],
             [-66, 282], [-59, 251], [-50, 257], [-146, -16], [-135, -30], [-146, 207], [-103, 259], [-99, 186], [-95, 200],
             [-67, 243], [-59, 251], [-66, 282], [-156, 190], [-146, -16], [-146, 207], [-103, 259], [-95, 200], [-89, 213],
             [-85, 272], [-67, 243], [-66, 282], [-156, -1], [-146, -16], [-156, 190], [-103, 259], [-89, 213], [-85, 272],
             [-85, 272], [-76, 234], [-67, 243], [-164, 172], [-156, -1], [-156, 190], [-89, 213], [-83, 224], [-85, 272],
             [-85, 272], [-83, 224], [-76, 234], [-164, 15], [-156, -1], [-164, 172], [-170, 153], [-164, 15], [-164, 172],
             [-170, 153], [-170, 32], [-164, 15], [-174, 51], [-170, 32], [-170, 153], [-174, 133], [-174, 51], [-170, 153],
             [-177, 71], [-174, 51], [-174, 133], [-177, 71], [-174, 133], [-177, 113], [-178, 92], [-177, 71], [-177, 113]])
        self.num_dot = numpy.array(
            [[-14, -260], [-10, -261], [-10, -171], [-10, -171], [-10, -261], [-4, -170], [-14, -172], [-14, -260], [-10, -171],
             [-10, -261], [-4, -262], [-4, -170], [-19, -258], [-14, -260], [-14, -172], [-4, -170], [-4, -262], [0, -262],
             [-19, -258], [-14, -172], [-19, -174], [-4, -170], [0, -262], [0, -169], [-24, -176], [-19, -258], [-19, -174],
             [0, -262], [5, -262], [0, -169], [-24, -256], [-19, -258], [-24, -176], [0, -169], [5, -262], [5, -170],
             [-28, -179], [-24, -256], [-24, -176], [5, -262], [11, -261], [5, -170], [-28, -252], [-24, -256], [-28, -179],
             [5, -170], [11, -261], [11, -171], [-32, -183], [-28, -252], [-28, -179], [11, -261], [15, -260], [11, -171],
             [-32, -183], [-32, -249], [-28, -252], [11, -171], [15, -260], [16, -172], [-36, -245], [-32, -249], [-32, -183],
             [15, -260], [20, -258], [16, -172], [-36, -245], [-32, -183], [-36, -187], [16, -172], [20, -258], [20, -174],
             [-39, -191], [-36, -245], [-36, -187], [20, -258], [25, -256], [20, -174], [-39, -191], [-39, -240], [-36, -245],
             [20, -174], [25, -256], [25, -176], [-41, -236], [-39, -240], [-39, -191], [25, -256], [29, -252], [25, -176],
             [-41, -196], [-41, -236], [-39, -191], [25, -176], [29, -252], [29, -179], [-43, -231], [-41, -236], [-41, -196],
             [29, -252], [33, -183], [29, -179], [-43, -231], [-41, -196], [-43, -200], [29, -252], [33, -249], [33, -183],
             [-44, -205], [-43, -231], [-43, -200], [33, -183], [33, -249], [37, -187], [-44, -226], [-43, -231], [-44, -205],
             [33, -249], [37, -245], [37, -187], [-45, -210], [-44, -226], [-44, -205], [37, -187], [37, -245], [40, -191],
             [-45, -210], [-45, -221], [-44, -226], [37, -245], [40, -240], [40, -191], [-45, -216], [-45, -221], [-45, -210],
             [40, -191], [40, -240], [42, -196], [40, -240], [42, -236], [42, -196], [42, -196], [42, -236], [44, -231],
             [42, -196], [44, -231], [44, -200], [44, -231], [45, -226], [44, -200], [44, -200], [45, -226], [45, -205],
             [45, -226], [46, -221], [45, -205], [45, -205], [46, -221], [46, -210], [46, -221], [46, -216], [46, -210]])

    def _translate_matrix_T(self,tx, ty):
     return numpy.array([[1, 0, 0], [0, 1, 0], [tx, ty, 1]])

    def _rotate_matrix_T(self,angle, cenx, ceny):
     C = math.cos(angle * math.pi / 180)
     S = math.sin(angle * math.pi / 180)
     M11 = C
     M12 = -S
     M13 = (1 - C) * cenx + S * ceny
     M21 = S
     M22 = C
     M23 = (1 - C) * ceny - S * cenx
     return numpy.array([[M11, M21, 0], [M12, M22, 0], [M13, M23, 1]])

    def _scale_matrix_T(self,sx, sy, cenx, ceny):
     M11 = sx
     M13 = (1 - sx) * cenx
     M22 = sy
     M23 = (1 - sy) * ceny
     return numpy.array([[M11, 0, 0], [0, M22, 0], [M13, M23, 1]])

    def Translate_lines(self,lines, tx, ty):
      M_T = self._translate_matrix_T(tx, ty)
      dimension = len(numpy.array(lines).shape)
      if dimension == 1:
       new_lines = numpy.insert(lines, 2, 1, axis=0)
      else:
       new_lines = numpy.insert(lines, 2, 1, axis=1)
      return numpy.dot(new_lines, M_T)[:, 0:2].tolist()


    def Rotate_lines(self,lines, angle, cenx, ceny):
     """
     对填充线（lines）进行旋转
     """
     M_T = self._rotate_matrix_T(angle, cenx, ceny)
     dimension = len(numpy.array(lines).shape)
     if dimension == 1:
      new_lines = numpy.insert(lines, 2, 1, axis=0)
     else:
      new_lines = numpy.insert(lines, 2, 1, axis=1)
     return numpy.dot(new_lines, M_T)[:, 0:2].tolist()

    def Scale_lines(self,lines, sx, sy, cenx, ceny):
     """
     对填充线（lines）进行缩放
     """
     M_T = self._scale_matrix_T(sx, sy, cenx, ceny)
     dimension = len(numpy.array(lines).shape)
     if dimension == 1:
      new_lines = numpy.insert(lines, 2, 1, axis=0)
     else:
      new_lines = numpy.insert(lines, 2, 1, axis=1)
     return numpy.dot(new_lines, M_T)[:, 0:2].tolist()


    def generate_char(self, char, interval=360, origin_pos=[0, 0], angle=0, ratio=1):
        tmp_stl = []
        tmp_len = len(char)
        if tmp_len % 2 == 0:
            tmp_pos = -interval * (tmp_len // 2 - 0.5)
        else:
            tmp_pos = -interval * (tmp_len // 2)
        for single in char:
            if single == '0':
                num = self.Translate_lines(self.num_0, origin_pos[0] + tmp_pos, origin_pos[1])
            elif single == '1':
                num = self.Translate_lines(self.num_1, origin_pos[0] + tmp_pos, origin_pos[1])
            elif single == '2':
                num = self.Translate_lines(self.num_2, origin_pos[0] + tmp_pos, origin_pos[1])
            elif single == '3':
                num = self.Translate_lines(self.num_3, origin_pos[0] + tmp_pos, origin_pos[1])
            elif single == '4':
                num = self.Translate_lines(self.num_4, origin_pos[0] + tmp_pos, origin_pos[1])
            elif single == '5':
                num = self.Translate_lines(self.num_5, origin_pos[0] + tmp_pos, origin_pos[1])
            elif single == '6':
                num = self.Translate_lines(self.num_6, origin_pos[0] + tmp_pos, origin_pos[1])
            elif single == '7':
                num = self.Translate_lines(self.num_7, origin_pos[0] + tmp_pos, origin_pos[1])
            elif single == '8':
                num = self.Translate_lines(self.num_8, origin_pos[0] + tmp_pos, origin_pos[1])
            elif single == '9':
                num = self.Translate_lines(self.num_9, origin_pos[0] + tmp_pos, origin_pos[1])
            elif single == '.':
                num = self.Translate_lines(self.num_dot, origin_pos[0] + tmp_pos, origin_pos[1])
            else:
                continue
            tmp_stl.extend(num)
            tmp_pos += interval
        tmp_stl = numpy.array(tmp_stl)
        tmp_stl = self.Rotate_lines(tmp_stl, angle, origin_pos[0], origin_pos[1])
        tmp_stl = self.Scale_lines(tmp_stl, ratio, ratio, origin_pos[0], origin_pos[1])
        return tmp_stl

